{"version":3,"sources":["./src/app/pages/authentication/authentication.page.ts","./src/app/pages/authentication/authentication-routing.module.ts","./src/app/pages/authentication/authentication.module.ts","./node_modules/@codetrix-studio/capacitor-google-auth/dist/esm/index.js","./node_modules/@codetrix-studio/capacitor-google-auth/dist/esm/web.js","./src/app/pages/authentication/authentication.page.html"],"names":[],"mappings":"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sB;AACtB,iC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AAC4C;AAC5C;AAC0D;AACnD,4BAA4B,yDAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAM,+BAA+B,mDAAM;AAC3D,qCAAqC,mDAAM;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;AAC8B;AACpD,yEAAiB;AACjB,+B;;;;;;;;;;;;AC/HA;AAAe,kyEAAmuE,E","file":"pages-authentication-authentication-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport '@codetrix-studio/capacitor-google-auth';\nimport { Plugins } from '@capacitor/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\nexport class AuthenticationPage implements OnInit {\n\n  public registerForm: FormGroup;\n  userInfo = null;\n  // validationMessages = {\n  //   'email': [\n  //       { type: 'required', message: 'Username is required.' },\n  //       { type: 'pattern', message: 'Your username must contain only numbers and letters.' },\n  //       { type: 'pattern', message: 'Your username has already been taken.' }\n  //     ],\n  //     'password': [\n  //       { type: 'required', message: 'Name is required.' },\n  //       { type: 'minlength', message: 'Username must be at least 5 characters long.' },\n  //       { type: 'maxlength', message: 'Username cannot be more than 25 characters long.' },\n  //     ],\n  //   }\n\n  constructor(public formBuilder: FormBuilder, private userService: UserService, private router: Router) {\n    const EMAIL_REGEXP = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    this.registerForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])],\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async googleLogin() {\n    console.log('entered in googla login');\n    const googleUser = await Plugins.GoogleAuth.signIn();\n    this.userInfo = googleUser;\n    console.log('google log in', googleUser);\n    if (this.userInfo.authentication.idToken) {\n      localStorage.setItem('userToken', this.userInfo.authentication.idToken);\n      this.router.navigate(['/sidemenu/Inicio']);\n    }\n  }\n\n  signin() {\n    const email = this.registerForm.controls.email.value;\n    const pass = this.registerForm.controls.password.value;\n    const emailValid = this.registerForm.controls.email.valid;\n    const passValid = this.registerForm.controls.password.valid;\n    if (email && pass && emailValid && passValid) {\n      localStorage.setItem('userToken', 'test-valid user');\n      this.router.navigate(['/sidemenu/Inicio']);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationPage } from './authentication.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPageRoutingModule } from './authentication-routing.module';\n\nimport { AuthenticationPage } from './authentication.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthenticationPageRoutingModule, ReactiveFormsModule\n  ],\n  declarations: [AuthenticationPage]\n})\nexport class AuthenticationPageModule {}\n","export * from './web';\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { WebPlugin } from '@capacitor/core';\n// @ts-ignore\nimport config from '../../../../../capacitor.config.json';\nexport class GoogleAuthWeb extends WebPlugin {\n    get webConfigured() {\n        return document.getElementsByName('google-signin-client_id').length > 0;\n    }\n    constructor() {\n        super({\n            name: 'GoogleAuth',\n            platforms: ['web']\n        });\n        if (!this.webConfigured)\n            return;\n        this.gapiLoaded = new Promise(resolve => {\n            // HACK: Relying on window object, can't get property in gapi.load callback\n            window.gapiResolve = resolve;\n            this.initialize();\n        });\n        this.addUserChangeListener();\n    }\n    initialize() {\n        var head = document.getElementsByTagName('head')[0];\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.defer = true;\n        script.async = true;\n        script.onload = this.platformJsLoaded;\n        script.src = 'https://apis.google.com/js/platform.js';\n        head.appendChild(script);\n    }\n    platformJsLoaded() {\n        gapi.load('auth2', () => {\n            const clientConfig = {\n                client_id: document.getElementsByName('google-signin-client_id')[0].content\n            };\n            if (config.plugins.GoogleAuth != null && config.plugins.GoogleAuth.scopes != null) {\n                clientConfig.scope = config.plugins.GoogleAuth.scopes.join(' ');\n            }\n            gapi.auth2.init(clientConfig);\n            window.gapiResolve();\n        });\n    }\n    signIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var serverAuthCode;\n                    var needsOfflineAccess = false;\n                    try {\n                        needsOfflineAccess = config.plugins.GoogleAuth.serverClientId != null;\n                    }\n                    catch (_a) {\n                    }\n                    if (needsOfflineAccess) {\n                        const offlineAccessResponse = yield gapi.auth2.getAuthInstance().grantOfflineAccess();\n                        serverAuthCode = offlineAccessResponse.code;\n                    }\n                    else {\n                        yield gapi.auth2.getAuthInstance().signIn();\n                    }\n                    const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n                    if (needsOfflineAccess) {\n                        // HACK: AuthResponse is null if we don't do this when using grantOfflineAccess\n                        yield googleUser.reloadAuthResponse();\n                    }\n                    const user = this.getUserFrom(googleUser);\n                    user.serverAuthCode = serverAuthCode;\n                    resolve(user);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            }));\n        });\n    }\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const authResponse = yield gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n            return {\n                accessToken: authResponse.access_token,\n                idToken: authResponse.id_token\n            };\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return gapi.auth2.getAuthInstance().signOut();\n        });\n    }\n    addUserChangeListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.gapiLoaded;\n            gapi.auth2.getAuthInstance().currentUser.listen(googleUser => {\n                this.notifyListeners(\"userChange\", googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n            });\n        });\n    }\n    getUserFrom(googleUser) {\n        const user = {};\n        const profile = googleUser.getBasicProfile();\n        user.email = profile.getEmail();\n        user.familyName = profile.getFamilyName();\n        user.givenName = profile.getGivenName();\n        user.id = profile.getId();\n        user.imageUrl = profile.getImageUrl();\n        user.name = profile.getName();\n        const authResponse = googleUser.getAuthResponse(true);\n        user.authentication = {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token\n        };\n        return user;\n    }\n}\nconst GoogleAuth = new GoogleAuthWeb();\nexport { GoogleAuth };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(GoogleAuth);\n//# sourceMappingURL=web.js.map","export default \"<ion-content>\\n<div class=\\\"signupPageWrapper\\\">\\n  <div class=\\\"signupLogoWrapper\\\">\\n      <img src=\\\"./../../../assets/loginLogo.png\\\" alt=\\\"broken\\\" height=\\\"50vh\\\"/>\\n  </div>\\n  <div class=\\\"signupFormWrapper\\\">\\n    <ion-text class=\\\"signupTitleText\\\">Inicie sesion</ion-text>\\n    <form [formGroup]=\\\"registerForm\\\" novalidate class=\\\"signupForm\\\">\\n      <ion-item>\\n        <!-- <ion-label class=\\\"signupSmallText signupGrayText\\\">Usuario</ion-label> -->\\n        <ion-input type=\\\"email\\\" class=\\\"form-controll\\\" formControlName=\\\"email\\\" placeholder=\\\"Usuario\\\"></ion-input>\\n      </ion-item>\\n      <ion-text color=\\\"danger\\\" class=\\\"signupErrText\\\">\\n        <p class=\\\"danger-text\\\" *ngIf=\\\"!registerForm.controls.email.valid && registerForm.controls.email.touched\\\">\\n            Please enter a valid Email!\\n        </p>\\n      </ion-text>\\n      <ion-item>\\n        <!-- <ion-label class=\\\"signupSmallText signupGrayText\\\">Contrasena</ion-label> -->\\n        <ion-input type=\\\"password\\\" class=\\\"form-controll\\\" formControlName=\\\"password\\\" placeholder=\\\"Contrasena\\\"></ion-input>\\n      </ion-item>\\n      <ion-text color=\\\"danger\\\" class=\\\"signupErrText\\\">\\n        <p class=\\\"danger-text\\\" *ngIf=\\\"!registerForm.controls.password.valid && registerForm.controls.password.touched\\\">\\n            This field must be at least 6 characters long!\\n        </p>\\n    </ion-text>\\n    </form>\\n    <div class=\\\"forgotLinkWrapper\\\">\\n      <ion-text [routerLink]=\\\"['/signup']\\\" class=\\\"signupSmallText\\\">Signup</ion-text>\\n      <ion-text [routerLink]=\\\"['/forgot-password']\\\" class=\\\"signupSmallText\\\">Olvido su contrasena?</ion-text>\\n    </div>\\n    <ion-button color=\\\"warning\\\" class=\\\"signupMedText\\\" type=\\\"submit\\\" (click)=\\\"signin()\\\" [disabled]=\\\"registerForm.invalid\\\">Iniciar sesion</ion-button>\\n  </div>\\n  <div class=\\\"btnWrapper\\\">\\n    <ion-text class=\\\"signupSmallText signupGrayText\\\">Inicie sesion con</ion-text>\\n    <ion-button color=\\\"light\\\" (click)=\\\"googleLogin()\\\">\\n      <img src=\\\"./../../../assets/icon/googleLogo.png\\\" alt=\\\"broken\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"googleLogoMargin\\\"/>\\n      <ion-text class=\\\"signupMedText signupGrayText googleText\\\">Google</ion-text>\\n    </ion-button>\\n  </div>\\n</div>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}